package com.example.tickets.prices;

import lombok.Builder;


/**
 * Цены на авиабилеты
 * <p>
 * Возвращает список цен, найденных нашими пользователями за последние 48 часов, в соответствии с выставленными фильтрами.
 * <p>
 * Если не указывать пункт отправления и назначения, то API вернет 30 самых дешевых билетов, которые были найдены за последние 48 часов.
 * При этом нельзя использовать period_type=month.
 */
@Builder
public class PricesLatestGetRequest {
    /**
     * Валюта цен на билеты. Значение по умолчанию — rub.
     */
    public String currency;
    /**
     * Пункт отправления. IATA код города или код страны. Длина не менее 2 и не более 3 символов.
     */
    public String origin;
    /**
     * Пункт назначения. IATA код города или код страны. Длина не менее 2 и не более 3.
     */
    public String destination;
    /**
     * Первое число месяца, в который попадают даты отправления (в формате YYYY-MM-DD, например 2018-05-01).
     * Обязательно указывать при period_type равном month. Если указать только beginning_of_period, то period_type можно не указывать.
     */
    public String beginning_of_period;
    /**
     * период, в котором искали билеты. Если период не указан, то отображаются билеты для перелётов в текущем месяце.
     * year — билеты, найденные в текущем году;
     * month — за указанный в beginning_of_period месяц.
     */
    public String period_type;
    /**
     * true — в одну сторону, false — туда и обратно. Значение по умолчанию — false.
     */
    public Boolean one_way;
    /**
     * Page — номер страницы. Значение по умолчанию — 1.
     */
    public Integer page;
    /**
     * Limit— количество записей на странице. Значение по умолчанию — 30. Не более 1000.
     */
    public Integer limit;
    /**
     * False — все цены, true — только цены, найденные с партнёрским маркером (рекомендовано).
     * Значение по умолчанию — true.
     */
    public Boolean show_to_affiliates;
    /**
     * Sorting — сортировка цен:
     * price — по цене (значение по умолчанию). Для направлений город — город возможна сортировка только по цене;
     * route — по популярности маршрута;
     * distance_unit_price — по цене за километр.
     */
    public String sorting;
    /**
     * Длительность пребывания в неделях.
     */
    public Integer trip_duration;


}
